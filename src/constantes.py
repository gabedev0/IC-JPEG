import numpy as np

TYPE = np.int32

C1 = 980  # 0.9807852804032304 | cos(pi/16) *1000
S1 = 195  # 0.19509032201612825 | sin(pi/16) *1000
C3 = 831  # 0.8314696123025452 | cos(3pi/16) *1000
S3 = 556  # 0.5555702330196022 | sin(3pi/16) *1000
C6 = 383  # 0.3826834323650898 | cos(6pi/16) *1000
S6 = 924  # 0.9238795325112867 | sin(6pi/16) *1000
SQRT_2 = 1414  # 1.4142135623730951 | sqrt(2) *1000
SCALE_CONST = 1000

# ----------------- CINTRA-BAYER DCT APPROXIMATION (2011) -----------------
# Paper: "A DCT Approximation for Image Compression" - IEEE Signal Processing Letters, 2011
# Matriz T = round(2 * DCT_II_matrix) - contém apenas {-1, 0, 1}
T_CINTRA_BAYER = np.array([
    [ 1,  1,  1,  1,  1,  1,  1,  1],
    [ 1,  1,  1,  0,  0, -1, -1, -1],
    [ 1,  0,  0, -1, -1,  0,  0,  1],
    [ 1,  0, -1, -1,  1,  1,  0, -1],
    [ 1, -1, -1,  1,  1, -1, -1,  1],
    [ 1, -1,  0,  1, -1,  0,  1, -1],
    [ 0, -1,  1,  0,  0,  1, -1,  0],
    [ 0, -1,  1, -1,  1, -1,  1,  0]
], dtype=TYPE)

# Normalização Cintra-Bayer: usa apenas 1/sqrt(8) (normalização DCT padrão)
# sqrt(8) ≈ 2.828427
# Escalado por SCALE_CONST=1000 para aritmética inteira
SQRT_8 = 2828  # sqrt(8) * 1000 ≈ 2828

# Matriz S completa (para referência/comparação, não usada na aproximação)
S_CINTRA_MATRIX = np.array([
    [ 418,   0,   0, -37, -37,   0,   0,   9],
    [   0, 418, -37,   0,   0, -37,   9,   0],
    [   0, -37, 418,   0,   0,   9, -37,   0],
    [ -37,   0,   0, 418,   9,   0,   0, -37],
    [ -37,   0,   0,   9, 418,   0,   0, -37],
    [   0, -37,   9,   0,   0, 418, -37,   0],
    [   0,   9, -37,   0,   0, -37, 418,   0],
    [   9,   0,   0, -37, -37,   0,   0, 418]
], dtype=TYPE)

# Q50_LUMA = np.ones((8, 8), dtype=TYPE)
# Q50_CHROMA = np.ones((8, 8), dtype=TYPE)


Q50_LUMA = np.array([
    [16, 11, 10, 16, 24, 40, 51, 61], [12, 12, 14, 19, 26, 58, 60, 55],
    [14, 13, 16, 24, 40, 57, 69, 56], [14, 17, 22, 29, 51, 87, 80, 62],
    [18, 22, 37, 56, 68, 109, 103, 77], [24, 35, 55, 64, 81, 104, 113, 92],
    [49, 64, 78, 87, 103, 121, 120, 101], [72, 92, 95, 98, 112, 100, 103, 99]
], dtype=TYPE)

Q50_CHROMA = np.array([
    [17, 18, 24, 47, 99, 99, 99, 99], [18, 21, 26, 66, 99, 99, 99, 99],
    [24, 26, 56, 99, 99, 99, 99, 99], [47, 66, 99, 99, 99, 99, 99, 99],
    [99, 99, 99, 99, 99, 99, 99, 99], [99, 99, 99, 99, 99, 99, 99, 99],
    [99, 99, 99, 99, 99, 99, 99, 99], [99, 99, 99, 99, 99, 99,  99, 99]
], dtype=TYPE)